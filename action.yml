name: Sphinx Docs
description: "Automates Sphinx docs generation: builds structure, extracts metadata, creates HTML, cleans up, and preps for GitHub Pages."
author: Ahmad Alobaid <ahmad88me@gmail.com>
branding:
  icon: 'book-open'
  color: 'yellow'

inputs:
  python-version:
    description: 'Version of Python to set up'
    required: false
    default: '3.8'
  git-username:
    description: 'Git username for commits'
    required: false
    default: 'yourusername'
  git-email:
    description: 'Git email for commits'
    required: false
    default: 'youremail@users.noreply.github.com'
  project-path:
    description: 'Path to the Sphinx project'
    required: false
    default: 'src'
  files-pattern:
    description: 'Pattern to match example files'
    required: false
  commit-message:
    description: 'Commit message for the documentation update'
    required: false
    default: 'update docs'
  github-token:
    description: 'GitHub token to push changes. '
    required: true
  readme:
    description: 'The path to the readme fiel to be included in the docs index'
    required: false
  args:
    description: "Add extra arguments to the sphinx example includer"
    required: false


runs:
  using: 'composite'
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip sphinx-autodoc-typehints sphinx_example_includer sphinx docutils sphinx_mdinclude
      shell: bash

    - name: Remove docs folder
      run: |
        rm -Rf docs
      shell: bash

    - name: Generate documentation
      run: |
        command="python -m sphinx_example_includer --info --build --project ${{ inputs.project-path }}";
        if [ -n "${{ inputs.files-pattern }}" ]; then
          command="$command --files ${{ inputs.files-pattern }} --overwrite" ;
        fi
        if [ -n "${{ inputs.readme }}" ]; then
          command="$command --readme ${{ inputs.readme }}";
        fi
        if [ -n "${{ inputs.args }}" ]; then
          command="$command ${{ inputs.args</ahmad88me@gmail.com> }}";
        fi
        $command
        cd docs; ls; find . -maxdepth 1 ! -name '_build' ! -name '.' ! -name '..' -exec rm -rf {} +
        mv _build/html/* ./
        touch .nojekyll
        cd ..
      shell: bash

    - name: Configure Git
      run: |
        git config --global user.name "${{ inputs.git-username }}"
        git config --global user.email "${{ inputs.git-email }}"
      shell: bash

    - name: Commit changes
      run: |
        git status -u
        git add docs
        if git diff-index --quiet HEAD --; then
           echo "No changes to commit"
           exit 0
        fi
        git commit -m "${{ inputs.commit-message }}"
      shell: bash

    - name: Push changes
      run: |
        git push
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        
outputs:
  docs-path:
    description: 'Path to the generated documentation'
    value: 'docs/'

